<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | 第九块石头]]></title>
  <link href="http://dijkst.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://dijkst.github.io/"/>
  <updated>2014-09-29T18:01:19+08:00</updated>
  <id>http://dijkst.github.io/</id>
  <author>
    <name><![CDATA[dijkst]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[让 Rails 支持 Response 数据 GZip 压缩]]></title>
    <link href="http://dijkst.github.io/blog/2013/07/18/rang-rails-zhi-chi-response-shu-ju-gzip-ya-suo/"/>
    <updated>2013-07-18T18:46:00+08:00</updated>
    <id>http://dijkst.github.io/blog/2013/07/18/rang-rails-zhi-chi-response-shu-ju-gzip-ya-suo</id>
    <content type="html"><![CDATA[<p>做网络请求时，一直想用 GZip 对 JSON 进行压缩后传输，但是一直没空弄，听说不难。这两天试了一下，果然不难。</p>

<p>在 Rails 项目根目录下的<code>config.ru</code>，加入<code>use Rack::Deflater</code>，如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config.ru </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;This file is used by Rack-based servers to start the application.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">require</span> <span class="o">::</span><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.</span><span class="n">.</span><span class="o">/</span><span class="n">config</span><span class="o">/</span><span class="n">environment</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span>  <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="no">FILE</span><span class="o">&lt;</span><span class="sr">/strong&gt;)</span>
</span><span class='line'><span class="sr">use Rack::Deflater</span>
</span><span class='line'><span class="sr">run Wending::Application</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>重启服务器即可。</p>

<p>如何判断是否生效了？那就来个测试。</p>

<!-- more -->


<p>先看看没有 GZip 压缩是什么样子的：</p>

<p><code>bash
$ curl http://localhost:4100/ # 域名和端口根据自己实际更改
</code></p>

<p>再看看使用了 GZip 压缩是什么样子的：</p>

<p><code>bash
$ curl http://localhost:4100/ -H "Acc-Encoding: gzip, deflate" # 域名和端口根据自己实际更改
</code></p>

<p>我们会看到采用了 GZip 后，输出的是乱码的，也不难看出，短了不少~这样就代表 GZip 设置成功了！</p>

<p>那该怎么用呢？</p>

<p>刚刚测试的时候其实都说明了：只需要在 request header 里面注明<code>Acc-Encoding: gzip, deflate</code>即可。其实说白了，是否用 GZip 压缩，还是客户端决定，客户端要非压缩的数据，服务器就给非压缩的数据；客户端要压缩的数据，服务器就给压缩的数据。默认当然是不压缩啦。</p>

<p>那在 iOS 上该如何用呢？</p>

<p>以 ASIHTTPRequest 为例：</p>

<p><code>objective-c
request = [ASIHTTPRequest requestWithURL:...];
[request setAllowCompressedResponse:YES];
</code></p>

<p>请求的时候设置<code>allowCompressedResponse</code>为<code>YES</code>即可。</p>

<h5>可能遇到的问题：</h5>

<p>如果服务器返回的不是 JSON 等数据，而是企图下载文件，且客户端依然请求 GZip，还是会被压缩（虽然这个压缩可能会越压越大）。强制不压缩，就是忽略那个 request header，可以这么做：</p>

<p>``` ruby</p>

<pre><code>def check_update_data
    send_file(file, :x_sendfile =&gt; true)
    headers['Content-Length'] = File.size(file)
    request.env['HTTP_ACCEPT_ENCODING'] = nil
end
</code></pre>

<p>```</p>

<p>将<code>HTTP_ACCEPT_ENCODING</code>设置为<code>nil</code>即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Bundle管理Cocoapods版本]]></title>
    <link href="http://dijkst.github.io/blog/2013/05/22/shi-yong-bundleguan-li-cocoapodsban-ben/"/>
    <updated>2013-05-22T18:15:00+08:00</updated>
    <id>http://dijkst.github.io/blog/2013/05/22/shi-yong-bundleguan-li-cocoapodsban-ben</id>
    <content type="html"><![CDATA[<p>Cocoapods将Rails的Gem思想成功的迁移到了OSX中，让iOS和MacOS也能快速的管理第三方依赖。</p>

<p>然而，用久了发现一个很尴尬的问题——Cocoapods还不是很完善，因此更新频率很大，虽然我经常更新，但是他对旧版本的Cocoapods兼容性并不好。</p>

<p>例如，我有一个项目是用0.16版本的Cocoapods开发的，过了一段时间，需要对这个项目进行更新，在运行<code>pod install</code>时会出现各种问题，原因是我用新版本的pod来安装旧版本的<code>podfile.lock</code>，虽然官方也尽量在兼容旧版本，但不可避免还是会出现各种问题，例如——用法过期并移除……</p>

<p>这时候想到，进行Rails开发中，用Bundle进行Gem管理，而Cocoapods本身就是一个Gem，那能不能用Bundle来管理Cocoapods呢？</p>

<!-- more -->


<p>我们先试着在项目根目录下，创建Gemfile文件：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objectivec'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">cocoapods</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mf">0.16.0</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>执行<code>bundle install</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install
</span><span class='line'>Fetching source index from &lt;a href="http://ruby.taobao.org/">http://ruby.taobao.org/&lt;/a>
</span><span class='line'>Resolving dependencies&hellip;
</span><span class='line'>Using rake (10.0.4)
</span><span class='line'>Using i18n (0.6.1)
</span><span class='line'>Using multi_json (1.7.3)
</span><span class='line'>Using activesupport (3.2.13)
</span><span class='line'>Using addressable (2.3.4)
</span><span class='line'>Using colored (1.2)
</span><span class='line'>Using escape (0.0.4)
</span><span class='line'>Using multipart-post (1.2.0)
</span><span class='line'>Using faraday (0.8.7)
</span><span class='line'>Using json (1.7.7)
</span><span class='line'>Using faraday_middleware (0.9.0)
</span><span class='line'>Using hashie (2.0.5)
</span><span class='line'>Using netrc (0.7.7)
</span><span class='line'>Using octokit (1.24.0)
</span><span class='line'>Using open4 (1.3.0)
</span><span class='line'>Using xcodeproj (0.5.5)
</span><span class='line'>Installing cocoapods (0.16.4)
</span><span class='line'>Using bundler (1.3.5)
</span><span class='line'>Your bundle is complete!
</span><span class='line'>Use &lt;code>bundle show [gemname]&lt;/code> to see where a bundled gem is installed.</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>用<code>gem list</code>看看本地有哪几个版本cocoapods：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem list cocoapods&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;strong>&lt;em> LOCAL GEMS &lt;/em>&lt;/strong>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>cocoapods (0.19.1, 0.16.4)</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>现在试试能否用旧版本的cocoapods：</p>

<p><code>
$ pod --version
0.16.4
</code></p>

<p>退出项目文件夹，去其他文件夹试试会不会自动切换到新版本:</p>

<p><code>
$ cd ..
$ pod --version
0.19.1
</code></p>

<p>成功！</p>

<p>发现有人直接用<code>pod --version</code>没效果，可能是他不是使用最新版本的RVM，则需要手动调用bundle：</p>

<p><code>
$ bundle exec pod --version
0.16.1
</code></p>
]]></content>
  </entry>
  
</feed>
