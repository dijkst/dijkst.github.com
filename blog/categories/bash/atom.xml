<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: bash | 第九块石头]]></title>
  <link href="http://dijkst.github.io/blog/categories/bash/atom.xml" rel="self"/>
  <link href="http://dijkst.github.io/"/>
  <updated>2018-01-03T13:35:42+08:00</updated>
  <id>http://dijkst.github.io/</id>
  <author>
    <name><![CDATA[dijkst]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress在zsh下无法新建博客的问题]]></title>
    <link href="http://dijkst.github.io/blog/2013/12/07/octopresszai-zshxia-wu-fa-xin-jian-bo-ke-de-wen-ti/"/>
    <updated>2013-12-07T23:27:00+08:00</updated>
    <id>http://dijkst.github.io/blog/2013/12/07/octopresszai-zshxia-wu-fa-xin-jian-bo-ke-de-wen-ti</id>
    <content type="html"><![CDATA[<p>转载自： <a href="http://fancyoung.com/blog/use-octopress-new-post-function-with-zsh/">http://fancyoung.com/blog/use-octopress-new-post-function-with-zsh/</a></p>

<p>执行：</p>

<p><code>
$ rake new_post["arch-linux-reinstall-glibc.markdown"]`
</code></p>

<p>报错：</p>

<p><code>
zsh: no matches found: new_post[arch-linux-reinstall-glibc]
</code></p>

<p>原因：zsh中若出现‘*’, ‘(’, ‘|’, ‘&lt;’, ‘[’, or ‘?’符号，则将其识别为查找文件名的通配符</p>

<!-- more -->


<p>快速解决：用引号括起来</p>

<p><code>
$ rake "new_post[arch-linux-reinstall-glibc.markdown]"
</code></p>

<p>彻底解决：取消zsh的通配(GLOB), 在<code>.zshrc</code>中加入 <code>alias rake="noglob rake"</code></p>

<p>PS：在 git 回滚操作</p>

<p><code>
git reset --soft HEAD^
</code></p>

<p>出现报错：</p>

<p><code>
zsh: no matches found HEAD^
</code></p>

<p>也为同样原因，因为<code>^</code>也为正则中的符号， 需要转义为</p>

<p><code>
git reset --soft HEAD\^。
</code></p>

<h3>参考</h3>

<p><a href="https://github.com/imathis/octopress/issues/117">Not compatible with Zsh</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在XCode的Run Script里调用python脚本]]></title>
    <link href="http://dijkst.github.io/blog/2013/06/06/zai-xcodede-run-scriptli-diao-yong-pythonjiao-ben/"/>
    <updated>2013-06-06T20:00:00+08:00</updated>
    <id>http://dijkst.github.io/blog/2013/06/06/zai-xcodede-run-scriptli-diao-yong-pythonjiao-ben</id>
    <content type="html"><![CDATA[<p>昨天把同事的打包文档的python脚本改了一下，早上我在终端上运行没出问题，打算加到XCode里成为打包 SDK 的脚本的一部分，开始了漫长折腾&hellip;</p>

<p>首先我的 python 脚本是被一个bash脚本调用的</p>

<p><figure class='code'><figcaption><span>generate_doc.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;CURRENT_FOLDER<span class="o">=</span>&lt;code&gt;cd <span class="k">$(</span>dirname <span class="nv">$0</span><span class="k">)</span><span class="p">;</span> <span class="nb">pwd</span>&lt;/code&gt;
</span><span class='line'><span class="nv">DOC_FOLDER</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$CURRENT_FOLDER</span>/../doc<span class="p">&amp;</span>rdquo<span class="p">;</span>
</span><span class='line'>python3 <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="k">${</span><span class="nv">CURRENT_FOLDER</span><span class="k">}</span>/generate_doc/generate_doc.py<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="nv">$DOC_FOLDER</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>我在<code>Run Script</code>里
<code>
sh ${PRJ_ROOT}/dev/scripts/generate_doc.sh
</code></p>

<p>提示两个错误<br/>
1，python3找不到<br/>
2，xxxx/../doc 是个文件夹</p>

<!-- more -->


<p>对于第二个问题我刚开始没有理会，<code>xxxx/../doc</code>就是文件夹嘛，有什么疑问的。</p>

<p>检查了一下<code>Run Script</code>运行时的环境变量发现python3的目录没有被包含在内， 于是在<code>Run Script</code>里添加了一下</p>

<p><code>
PATH="${PATH}:/usr/local/bin"
sh ${PRJ_ROOT}/dev/scripts/generate_doc.sh
</code></p>

<p>提示两个错误<br/>
1，在open(xxx).read() UnicodeDecodeError <br/>
2，xxxx/../doc 是个文件夹</p>

<p>对于第一个问题，可以显式设置encoding来解决（后来发现不是很有必要）</p>

<p><code>
open(md_path, 'r', encoding='utf-8').read()
</code></p>

<p>第二个问题再次被我忽略，再次运行</p>

<p>还是提示两个错误<br/>
1，print(xxx) UnicodeDecodeError<br/>
2，xxxx/../doc 是个文件夹</p>

<p>这次不能忍第二个问题了，弄了很久，杯具地发现 <code>$DOC_FOLDER</code>要加双引号才行</p>

<p><code>
python3 "${CURRENT_FOLDER}/generate_doc/generate_doc.py""${DOC_FOLDER}"
</code></p>

<p>现在剩下一个错误<br/>
1，print(xxx) UnicodeDecodeError</p>

<p>找了很久才解决，需要在环境变量中添加个Python编码的设置: <code>export PYTHONIOENCODING=UTF-8</code> ，最后执行python的脚本如下</p>

<p><figure class='code'><figcaption><span>generate_doc.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;CURRENT_FOLDER<span class="o">=</span>&lt;code&gt;cd <span class="k">$(</span>dirname <span class="nv">$0</span><span class="k">)</span><span class="p">;</span> <span class="nb">pwd</span>&lt;/code&gt;
</span><span class='line'><span class="nv">DOC_FOLDER</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">$CURRENT_FOLDER</span>/../doc<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;export <span class="nv">PYTHONIOENCODING</span><span class="o">=</span>UTF-8&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;python3 <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="k">${</span><span class="nv">CURRENT_FOLDER</span><span class="k">}</span>/generate_doc/generate_doc.py<span class="p">&amp;</span>rdquo<span class="p">;&amp;</span>ldquo<span class="p">;</span><span class="k">${</span><span class="nv">DOC_FOLDER</span><span class="k">}</span><span class="p">&amp;</span>rdquo<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>这样，我的打包脚本就能执行起来了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[获得当前脚本文件所在目录]]></title>
    <link href="http://dijkst.github.io/blog/2013/06/04/huo-de-dang-qian-jiao-ben-wen-jian-suo-zai-mu-lu/"/>
    <updated>2013-06-04T23:35:00+08:00</updated>
    <id>http://dijkst.github.io/blog/2013/06/04/huo-de-dang-qian-jiao-ben-wen-jian-suo-zai-mu-lu</id>
    <content type="html"><![CDATA[<p>只用$(dirname $0)是不能获得绝对路径的， 还要跳到那个目录，再获取绝对路径，命令如下</p>

<p><figure class='code'><figcaption><span>script.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;DIR<span class="o">=</span>&lt;code&gt;cd <span class="k">$(</span>dirname <span class="nv">$0</span><span class="k">)</span><span class="p">;</span> <span class="nb">pwd</span>&lt;/code&gt;
</span><span class='line'><span class="nb">echo</span> <span class="nv">$DIR</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
